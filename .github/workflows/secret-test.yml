name: Deploy to GitHub Pages
on:
  push:
    branches:
      - main

permissions:
  contents: write
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build-and-deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Create config file with encoded API key
        run: |
          # API 키를 여러 단계로 인코딩
          KEY1=$(echo -n "${{ secrets.API }}" | tr 'A-Za-z' 'N-ZA-Mn-za-m')
          KEY2=$(echo -n "$KEY1" | base64)
          
          # JavaScript 파일 생성 (IIFE 방식)
          cat > config.js << EOL
          (function() {
              const _k = '${KEY2}';
              const _d = function(s) {
                  try {
                      let k = atob(s);
                      return k.replace(/[a-zA-Z]/g, c => 
                          String.fromCharCode((c <= 'Z' ? 90 : 122) >= (c = c.charCodeAt(0) + 13) ? c : c - 26)
                      );
                  } catch(e) {
                      console.error('API 키 복호화 실패');
                      return null;
                  }
              };
              
              // API 키를 전역 객체에 추가
              Object.defineProperty(window, '_apiKey', {
                  get: function() { return _d(_k); },
                  configurable: false,
                  enumerable: false
              });
          })();
          EOL
          
          echo "Config file created successfully"
          ls -la

      - name: Setup Pages
        uses: actions/configure-pages@v3

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: '.'

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2



